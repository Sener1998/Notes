******************************************************************************************
******************************************************************************************
去除"To run a command as administrator (user "root"), use "sudo <command>".
        See "man sudo_root" for details."
	touch ~/.sudo_as_admin_successful
******************************************************************************************
******************************************************************************************
 echo -e "\033[31;5m 123 \033[0m"

\033 	代表ESC的ASCII码，
[31;5m	[颜色(红、蓝...);显示模式(加粗、下划线、带底色...)m
\033[0m	结束，之后的显示恢复原状
******************************************************************************************
******************************************************************************************
ln -s     [目标目录]         [软链接地址]   //创建
ln -snf  [新目标目录]      [软链接地址]  //修改
******************************************************************************************
******************************************************************************************
bash

cd + ls
.bashrc
文件末尾加入:
cdls() {  
    cd "${1}" 
    ls;  
}  
alias cd='cdls' 
------------------------------------------------------------------------------------------
zsh

function chpwd() {
    emulate -L zsh
    ls
}
******************************************************************************************
******************************************************************************************
二进制转十六进制文本
hexdump -v -e/'"%02x"' rtthread.bin > rtthread.hex
******************************************************************************************
******************************************************************************************
sed 每6个字符
sed 's/....../&\n/g' test
******************************************************************************************
******************************************************************************************
mkdir -p build
若build不存在则创建build，若存在则什么都不执行
******************************************************************************************
******************************************************************************************
虚拟机的ubuntu借助主机科学上网

步骤：
1. 查询vm8的IPv4的地址                   (默认是192.168.248.1)
这一步有问题，遇到的情况是当主机使用有线网络时使用vm8的地址是没问题的，但是使用无线网络的时候要直接使用无线网卡的IP地址
2. 查询v2RayN的http和sock5的端口  (默认分别是10809、10808)
3.同时将v2RayN设置为允许局域网连接
4. ubuntu中设置代理
5. 浏览器设置为使用用户代理
6. git使用proxy翻墙
    (-------git config --global http.proxy 'http://(IP):(port)------)
    git config --global http.proxy 'http://192.168.248.1:10809' 
    git config --global https.proxy 'http://192.168.248.1:10809'
    把'git@github.com:'改为'https://github.com/'

注意：
1. git config --global --unset http.proxy(https.proxy) 可以取消配置
2. git config --global --list 查看配置信息
******************************************************************************************
******************************************************************************************
虚拟机的Ubuntu的ens33没有IP地址

1.首先检查服务里面的VMware DHCP Service是否开启
2.使用dhclient重新获取IP地址
sudo dhclient ens33
sudo ifconfig ens33
dhclient命令 – 动态获取或释放IP地址

可使用该两条指令解决
echo "19980203" | sudo -S dhclient ens33 >>/dev/null 2>&1
ifconfig ens33 >>/dev/null 2>&1
******************************************************************************************
******************************************************************************************
修改开机项
在Startup Applications Preferences中添加或删除
******************************************************************************************
******************************************************************************************
从URL文件
wget -r -np -nH -R index.html ${URL}

-r      下载URL所有文件及其子文件夹，无限递归
-np   不到母文件夹中
-nH   不要将文件保存到主机名文件夹
-R index.html    不下载 index.html 文件

wget http://petalinux.xilinx.com/sswreleases/rel-v2021/downloads/acl-2.2.53.tar.gz
wget -r -np -nH -R index.html http://petalinux.xilinx.com/sswreleases/rel-v2021/aarch64/

-c     可断点续连，继续下载，将之前的下载命令单独加上一个-c即可
-t 0   -t表示重连次数，0表示无线，1表示1次
-e "http_proxy=http://192.168.146.1:10809"   表示下载时使用代理


全局修改wget需要修改/etc/wgetrc
https_proxy = http://192.168.11.114:10809/
http_proxy = http://192.168.11.114:10809/
******************************************************************************************
******************************************************************************************
用 ls /bin/sh -al 命令查看/bin/sh 的解释器
修改默认的sh，可以采用命令
sudo dpkg-reconfigure dash
选no
******************************************************************************************
******************************************************************************************
man用来查看不会的命令或函数的帮助

man ls (默认是1)
man 2 open
man 3 printf

帮助信息被分了类型
1 命令的帮助
2 linux系统库函数的帮助
3 标准c库函数的帮助信息

-f 查看帮助类型有哪些
man -f fopen
******************************************************************************************
******************************************************************************************
ps aux 列出所有进程

init进程（pid 1）是系统启动的第一个进程，之后再创建其他进程
******************************************************************************************
******************************************************************************************
递归删除  特定文件

find /tmp/98/upload -name *.avi -type f -print -exec rm -rf {} \;
find . -name abc -type d -print -exec rm -rf {} \;

(1) "."    表示从当前目录开始递归查找
(2) “ -name '*.exe' "根据名称来查找，要查找所有以.exe结尾的文件夹或者文件
(3) " -type f "查找的类型为文件
(4) "-print" 输出查找的文件目录名
(5) 最主要的是是-exec了，-exec选项后边跟着一个所要执行的命令，表示将find出来的文件或目录执行该命令。exec选项后面跟随着所要执行的命令或脚本，然后是一对儿{}，一个空格和一个\，最后是一个分号
------------------------------------------------------------------------------------------
windows里面使用del
del  *index.*  /s
删除当前文件夹及子文件夹里满足*index.*的文件
/s 表示递归删除
******************************************************************************************
******************************************************************************************
首先下载 gitee 镜像的安装脚本

wget https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh

找到以下部分

# Default settings
ZSH=${ZSH:-~/.oh-my-zsh}
REPO=${REPO:-ohmyzsh/ohmyzsh}
REMOTE=${REMOTE:-https://github.com/${REPO}.git}
BRANCH=${BRANCH:-master}

把

REPO=${REPO:-ohmyzsh/ohmyzsh}
REMOTE=${REMOTE:-https://github.com/${REPO}.git}

替换为

REPO=${REPO:-mirrors/oh-my-zsh}
REMOTE=${REMOTE:-https://gitee.com/${REPO}.git}

保存后直接运行安装脚本
接下来修改仓库地址，这一步是为了更新检查正常

cd ~/.oh-my-zsh
git remote set-url origin https://gitee.com/mirrors/oh-my-zsh.git
git pull

但其实直接下载后运行install.sh就行
------------------------------------------------------------------------------------------
chsh -s /usr/bin/zsh
reboot
******************************************************************************************
******************************************************************************************
git 大神教程
https://zhuanlan.zhihu.com/p/30044692
******************************************************************************************
******************************************************************************************
使用igh 实现EtherCAT主站
------------------------------------------------------------------------------------------
前戏   注意README里面是有问题的
git clone https://gitlab.com/etherlab.org/ethercat.git
git checkout stable-1.5

./bootstrap
去掉额外的加补丁的驱动，使用默认驱动，其实主要是8139too，这个需要实时补丁的支持，内核打了实时补丁就不用去掉
./configure --enable-generic --disable-e100 --disable-8139too --disable-e1000 --disable-r8169
或者
./configure --enable-8139too=no --enable-wildcards=yes （最后用的这个，但这两个应该都行）

sudo make
sudo make modules
sudo make install
sudo make modules_install
sudo depmod 检查依赖关系

{PREFIX}默认是/usr/local，在配置的时候可以改成其他的地方，但是没必要
ln -s ${PREFIX}/etc/init.d/ethercat /etc/init.d/ethercat
cp ${PREFIX}/etc/sysconfig/ethercat /etc/sysconfig/ethercat
修改配置文件
在MASTER0_DEVICE=""填写以太网卡的MAC地址，DEVICE_MODULES="generic"
vim /etc/sysconfig/ethercat
或者先修改再复制

------------------------------------------------------------------------------------------

******************************************************************************************
******************************************************************************************
1. 记录日志但不输出显示：
把 ls 命令的执行结果记录到文件 ls.log 中如果文件已存在，则清空并写入当前的日志信息
ls > test.log

2. 记录日志但不输出显示（末尾追加）：
把 ls 命令的执行结果记录到文件 ls.log 中如果文件已存在，则在末尾追加日志信息
ls >> test.log

3. 即输出显示又记录：
在终端上显示 ls 命令的执行结果并把执行结果输出到 test.log 文件中
ls | tee test.log

4. 即输出显示又记录（末尾追加）：
描述：把 ls 命令的执行结果追加到 test.log 文件的后面
ls | tee -a test.log
******************************************************************************************
******************************************************************************************
硬盘克隆/系统备份/linux密码破解
------------------------------------------------------------------------------------------
1. windows/DOS
使用ghost最方便，推荐使用rufus往u盘里写入FreeDOS(软件自带)，然后把ghost.exe(16位)复制到u盘，然后u盘启动，运行ghost即可
使用过MS-DOS7.1+ghost.exe，但是无法在实际的机器上运行ghost，还是FreeDOS好用
如果只是想玩DOS系统的话还是推荐虚拟机装MS-DOS7.1，因为支持鼠标操作
(不排除我的MSDOS有问题且FreeDOS版本合适的可能性，我是用的rufus 3.8自带的FreeDOS)
------------------------------------------------------------------------------------------
2. linux
不推荐使用ghost，因为在克隆后引导会出错，可能是我的ghost的版本很低，但不重要，因为有更牛逼的方法

2.1首先将u盘制成可以运行ubuntu，最简单的方法是将安装ubuntu的iso写入u盘，然后u盘启动进行try ubuntu模式
如果不想把整个硬盘克隆出来(带引导文件)，只想复制出来一部分文件，则直接在这一步把文件拷出来
2.2执行fdisk指令查看硬盘信息(该模式下，sudo直接用，不需要密码)
sudo fdisk -u -l
2.3(可选)将额外的存储器挂载到/mnt，由于u盘比较小，可能无法存储克隆出的镜像文件
sudo mkdir /mnt/usb
sudo mount /dev/sdb2  /mnt/usb/  (/dev/sdb2为另外一个u盘的第二个分区)
2.4执行dd指令将硬盘的数据打包复制出来
sudo dd ps=512 count=62531584 if=/dev/sda of=/mnt/usb/data.img  (以克隆/dev/sda硬盘为例)
ps=512                 表示512k为1个block的尺寸
count=62531584 表示复制62531584个block这个数量的计算方法是，将fdisk步骤中需要克隆的硬盘的end最后一位的值加1
在这一步会有问题，因为直接生成img文件的话，它是和硬盘总大小相同的，所以对于比较大容量但是实际数据较少的硬盘直接生成img文件太亏
所以可以在克隆过程中可以同时进行压缩
sudo dd ps=512 count=62531584 if=/dev/sda | gzip -6 > /mnt/usb/data.img.gz
gzip 使用压缩指令，默认是6级压缩，有1~9共9个等级，等级越高压缩效果越好但压缩时间越长
解压是使用gzip -d data.img.gz，不过使用这个指令的话，源文件会直接被删掉，也可以使用tar -xzvf，其中的-z就是调用gzip

到此硬盘克隆完毕，接下来“破解”ubuntu
2.5使用StarWind V2V Converter将img文件转成vmdk(vmware的虚拟磁盘文件)
2.6新建一个ubuntu的虚拟机，或者找一个现有的虚拟机插上虚拟磁盘
在编辑虚拟机里面添加硬盘，选择虚拟磁盘选项
如果启动时卡在Switched to clocksource tsc随后进入initramfs状态那么添加硬盘是选择IDE类型，不要使用推荐的SCSI
如果启动时出现Waiting for network configuration并且有长时间的等待，如果不需要，则在修改/etc/init/failsafe.conf
将第一个sleep 20 改成sleep 5，后面的都注释掉
2.7破解密码
不要直接进入ubuntu，而是进入Advanced Options for Ubuntu，找到带recovery mode的选型，按e键进入参数设置页面
删掉recovery nomodeset，再在该行最后添加quiet splash rw init=/bin/bash，最后按F10启动，输入passwd改密码
/etc/passwd文件里面有所有用户的信息
/etc/shadow文件里面存储密码
但是都不重要，在root模式下，可以随意改用户的密码
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************
******************************************************************************************